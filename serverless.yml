service: BattleAuth

provider:
  name: aws
  runtime: dotnetcore5.0
  region: us-east-2
  profile: ${opt:profile, ''}
  logRetentionInDays: 3
  stage: ${opt:stage, 'test'}
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'logs: *'
          Resource: '*'

custom:
  imageMap:
    test: 098170852411.dkr.ecr.us-east-2.amazonaws.com/battleauth-api-test:latest
    prod: 098170852411.dkr.ecr.us-east-2.amazonaws.com/battleauth-api-prod:latest
  domainMap:
    test: identity.api.test.battlelineproductions.com
    prod: identity.api.battlelineproductions.com
  certMap:
    test: identity.api.test.battlelineproductions.com
    prod: identity.api.battlelineproductions.com
  customDomain:
    domainName: ${self:custom.domainMap.${self:provider.stage}}
    certificateName: ${self:custom.certMap.${self:provider.stage}}
    createRoute53Record: true
    endpointType: regional
    securityPolicy: tls_1_2
    apiType: rest

plugins:
  - serverless-domain-manager

package:
  individually: true

functions:
  api:
    name: ${self:service}-api-lambda-${self:provider.stage}
    memorySize: 512
    description: API lambda container for Battle Auth Service
    image:
      uri: ${self:custom.imageMap.${self:provider.stage}}
      command: 
        - BattleAuth.Api::BattleAuth.Api.LambdaEntryPoint::FunctionHandlerAsync
    events:
    - http:
        path: /{any+}
        method: ANY
        